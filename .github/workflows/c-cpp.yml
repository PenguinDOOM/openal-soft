name: OpenAL Soft Build Test

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }} | ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          -
            name: "Visual Studio 2019 64-bit"
            os: windows-latest
            extra_options: "-A x64 -D"
            qtarch: "win64_msvc2019_64"
            qtdir: "Qt5Widgets_DIR:PATH=./Qt/5.15.0/msvc2019_64/lib/cmake/Qt5Widgets"
            qtdll: "./Qt/5.15.0/msvc2019_64"
            build_type: "Release"
          -
            name: "Visual Studio 2019 32-bit"
            os: windows-latest
            extra_options: "-A Win32 -D"
            qtarch: "win32_msvc2019"
            qtdir: "Qt5Widgets_DIR:PATH=./Qt/5.15.0/msvc2019/lib/cmake/Qt5Widgets"
            qtdll: "./Qt/5.15.0/msvc2019"
            build_type: "Release"

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        ref: master

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.0'
        host: 'windows'
        target: 'desktop'
        arch: '${{ matrix.config.qtarch }}'
        dir: '${{ github.workspace }}/'

    - name: Configure
      shell: bash
      run: |
        cmake -B ./build -G "Visual Studio 16 2019" -DALSOFT_BUILD_ROUTER=ON -DALSOFT_REQUIRE_WINMM=ON -DALSOFT_REQUIRE_DSOUND=ON -DALSOFT_REQUIRE_WASAPI=ON -DALSOFT_EMBED_HRTF_DATA=YES -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config.build_type }} -DFORCE_STATIC_VCRT:BOOL=ON ${{ matrix.config.extra_options }}"${{ matrix.config.qtdir }}"

    - name: Build
      shell: bash
      run: |
        cmake --build ./build --config ${{ matrix.config.build_type }} --clean-first

    - name: Packing artifact
      shell: bash
      run: |
        mkdir ./Build/Release/platforms
        cp ${{ matrix.config.qtdll }}/bin/Qt5Core.dll ./Build/Release/
        cp ${{ matrix.config.qtdll }}/bin/Qt5Gui.dll ./Build/Release/
        cp ${{ matrix.config.qtdll }}/bin/Qt5Widgets.dll ./Build/Release/
        cp ${{ matrix.config.qtdll }}/plugins/platforms/qwindows.dll ./Build/Release/platforms/
        cd ./Build/Release
        7z a -r -ssw -mx5 -t7z ${{ matrix.config.name }}_${{ matrix.config.build_type }}.7z
        cd ../../

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: Artifact
        path: ./build/Release/${{ matrix.config.name }}.7z
