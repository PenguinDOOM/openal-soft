name: OpenAL Soft Build Test

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }} | ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          -
            name: "Visual Studio 15 2017 Win64"
            os: windows-2016
            qtarch: "win64_msvc2017_64"
            qtdir: "Qt5Widgets_DIR:PATH=./Qt/5.14.2/msvc2017_64/lib/cmake/Qt5Widgets"
            qtdll: "./Qt/5.14.2/msvc2017_64"
            build_type: "Release"
            build_dir: "Build_Win64"
          -
            name: "Visual Studio 15 2017"
            os: windows-2016
            qtarch: "win32_msvc2017"
            qtdir: "Qt5Widgets_DIR:PATH=./Qt/5.14.2/msvc2017/lib/cmake/Qt5Widgets"
            qtdll: "./Qt/5.14.2/msvc2017"
            build_type: "Release"
            build_dir: "Build_Win32"

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        ref: master

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
        host: 'windows'
        target: 'desktop'
        arch: '${{ matrix.config.qtarch }}'
        dir: '${{ github.workspace }}/'

    - name: Configure
      shell: bash
      run: |
        cmake -B ./${{ matrix.config.build_dir }} -G "${{ matrix.config.name }}" -DALSOFT_BUILD_ROUTER=ON -DALSOFT_REQUIRE_WINMM=ON -DALSOFT_REQUIRE_DSOUND=ON -DALSOFT_REQUIRE_WASAPI=ON -DALSOFT_EMBED_HRTF_DATA=YES -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config.build_type }} -DFORCE_STATIC_VCRT:BOOL=ON -D"${{ matrix.config.qtdir }}"

    - name: Build
      shell: bash
      run: |
        cmake --build ./${{ matrix.config.build_dir }} --config ${{ matrix.config.build_type }} --clean-first

    - name: Packing artifact
      shell: bash
      run: |
        mkdir ./${{ matrix.config.build_dir }}/Release/platforms
        cp ${{ matrix.config.qtdll }}/bin/Qt5Core.dll ./${{ matrix.config.build_dir }}/Release/
        cp ${{ matrix.config.qtdll }}/bin/Qt5Gui.dll ./${{ matrix.config.build_dir }}/Release/
        cp ${{ matrix.config.qtdll }}/bin/Qt5Widgets.dll ./${{ matrix.config.build_dir }}/Release/
        cp ${{ matrix.config.qtdll }}/plugins/platforms/qwindows.dll ./${{ matrix.config.build_dir }}/Release/platforms/
        cd ./${{ matrix.config.build_dir }}/Release
        cd ../../

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: ./${{ matrix.config.build_dir }}/Release/
        name: ${{ matrix.config.name }} ${{ matrix.config.build_type }}
